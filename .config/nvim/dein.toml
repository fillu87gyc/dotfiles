[[plugins]]
hook_add = '''
  let g:EasyMotion_do_mapping = 0
  let g:EasyMotion_smartcase = 1

  " <Leader>f{char} to move to {char}
  nmap  <Leader>s <Plug>(easymotion-bd-f)
  vmap  <Leader>s <Plug>(easymotion-bd-f)

  " s{char}{char} to move to {char}{char}
  nmap <Leader><Leader>s <Plug>(easymotion-bd-f2)
  vmap <Leader><Leader>s <Plug>(easymotion-bd-f2)

  " Move to line
  nmap <Leader>j <Plug>(easymotion-bd-jk)
  vmap <Leader>j <Plug>(easymotion-bd-jk)
  nmap <Leader>k <Plug>(easymotion-bd-jk)
  vmap <Leader>k <Plug>(easymotion-bd-jk)
'''
repo = 'Lokaltog/vim-easymotion'

# 括弧の対応関係を表示
[[plugins]]
hook_add = '''
  let g:loaded_matchparen = 1
'''
repo = 'itchyny/vim-parenmatch'

[[plugins]]
hook_add = '''
  nmap <Leader>c  <Plug>(caw:hatpos:toggle)
  vmap <Leader>c  <Plug>(caw:hatpos:toggle)
  nmap <Leader>C  <Plug>(caw:hatpos:comment)
  nmap <Leader>U  <Plug>(caw:hatpos:uncomment)
  vmap <Leader>C  <Plug>(caw:hatpos:comment)
  vmap <Leader>U  <Plug>(caw:hatpos:uncomment)
'''
repo = 'tyru/caw.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'

[[plugins]]
build = './install --bin'
repo = 'junegunn/fzf'

[[plugins]]
depends = 'fzf'
hook_add = '''
  let g:fzf_layout = { 'up': '~60%' }

  let g:fzf_action = {
  \ 'Enter' : 'tab split',
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit' }

  nnoremap ;f :Files!<CR>
  nnoremap ;t :Files!<CR>
  command! -bang -nargs=? -complete=dir Files
  \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)

  nnoremap ;s :GFiles?<CR>

  nnoremap ;g :Rg<CR>
  command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always --hidden '.shellescape(<q-args>), 1,
  \    fzf#vim#with_preview(), <bang>0)
'''
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
let g:indentLine_char_list = ['|', '¦', '┆', '┊']
let g:vim_json_conceal=0 
'''

[[plugins]]
hook_add = '''
  autocmd BufWritePre *.py Isort
'''
on_ft = ['python']
repo = 'fisadev/vim-isort'

[[plugins]]
hook_add = '''
  function! Fileformat()
    return &buftype ==# 'terminal' || &filetype =~# 'denite\|tagbar' ? '' :
          \ winwidth(0) > 120 ? &fileformat . (exists('*WebDevIconsGetFileFormatSymbol') ? ' ' . WebDevIconsGetFileFormatSymbol() : '') : ''
  endfunction

  function! Filetype()
    return &buftype ==# 'terminal' || &filetype =~# 'denite\|tagbar' ? '' :
          \ winwidth(0) > 120 ? (strlen(&filetype) ? &filetype . (exists('*WebDevIconsGetFileTypeSymbol') ? ' ' . WebDevIconsGetFileTypeSymbol() : '') : 'no ft') : ''
  endfunction

  function! Fileencoding()
    return &buftype ==# 'terminal' || &filetype =~# 'denite\|tagbar' ? '' :
          \ winwidth(0) > 120 ? (strlen(&fileencoding) ? &fileencoding : &encoding) : ''
  endfunction

  function! GitBranch()
    let icon = "\ue0a0 "
    let branch = gitbranch#name()
    return icon . branch
  endfunction

    let g:lightline = {
    \ 'colorscheme': 'nord',
    \ 'active': {
    \     'left': [ [ 'mode', 'paste' ],
    \               [ 'gitbranch', 'readonly', 'filename', 'modified' ] ],
    \     'right':[ [ 'lineinfo' ],
    \               [ 'percent' ],
    \               [ 'fileformat', 'fileencoding', 'filetype' ],
    \               [ 'lsp_errors', 'lsp_warnings', 'lsp_ok'  ] ]
    \   },
    \  'component': {
    \    'readonly': ' %R',
    \    'modified': '%m',
    \    'filename': '  %t',
    \    'percent': '%3p%%',
    \    'lineinfo': '並%3l:%-2v'
    \  },
    \  'component_function': {
    \    'gitbranch':    'GitBranch',
    \    'fileformat':   'Fileformat',
    \    'filetype':     'Filetype',
    \    'fileencoding': 'Fileencoding',
    \  },
    \ 'component_expand': {
    \   'lsp_warnings': 'lightline_lsp#warnings',
    \   'lsp_errors':   'lightline_lsp#errors',
    \   'lsp_ok':       'lightline_lsp#ok',
    \ },
    \ 'component_type': {
    \   'lsp_warnings': 'warning',
    \   'lsp_errors':   'error',
    \   'lsp_ok':       'middle',
    \ },
    \ 'separator': { 'left': "\ue0b0", 'right': "\ue0b2" },
    \ 'subseparator': { 'left': "\ue0b1", 'right': "\ue0b3" }
    \ }
'''
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'itchyny/vim-gitbranch'

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
hook_add = '''
let g:python_style = 'google'
nmap gd :Docstring<CR>
'''
repo = 'pixelneo/vim-python-docstring'

[[plugins]]
repo = 'arcticicestudio/nord-vim'
